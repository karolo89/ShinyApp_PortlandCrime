#load packages
library(ggpubr)
library(ggplot2)
library(plotly)
library(shiny)
library(dplyr)
library(shinydashboard)
library(DT)

##Dispatched Calls for Service by Portland Police Bureau
##  https://public.tableau.com/app/profile/portlandpolicebureau/viz/DispatchedCallsforService/DispatchedCalls

dispatch_calls2023 <- read.csv("https://raw.githubusercontent.com/karolo89/Raw_Data/main/dispatchedcalls_opendata_2023_1.csv")%>%
  select(-ReportDateTime)%>%
  mutate(Priority = as.factor(Priority))%>%
  mutate(FinalCallCategory = as.factor(FinalCallCategory)) %>%
  mutate(FinalCallGroup = as.factor(FinalCallGroup))%>%
  mutate(Neighborhood = as.factor(Neighborhood))%>%
  mutate(ReportMonthYear = mdy(ReportMonthYear))%>%
  mutate_if(is.character, as.double)%>%
  separate("ReportMonthYear", c("Year", "Month", "Day"), sep = "-")%>%
  select(-Day)%>%
  mutate(date= as.yearmon(paste(Year, Month), "%Y %m"))

dispatch_calls2022 <-read.csv("https://raw.githubusercontent.com/karolo89/Raw_Data/main/dispatchedcalls_opendata_2022_0.csv")%>%
  mutate(Priority = as.factor(Priority))%>%
  mutate(FinalCallCategory = as.factor(FinalCallCategory)) %>%
  mutate(FinalCallGroup = as.factor(FinalCallGroup))%>%
  mutate(Neighborhood = as.factor(Neighborhood))%>%
  mutate(ReportMonthYear = mdy(ReportMonthYear))%>%
  mutate_if(is.character, as.double)%>%
  separate("ReportMonthYear", c("Year", "Month", "Day"), sep = "-")%>%
  select(-Day)%>%
  mutate(date= as.yearmon(paste(Year, Month), "%Y %m"))

calls <- rbind(dispatch_calls2022, dispatch_calls2023)



# Prepare mtcars and use plotly to make donut plot
calls$FinalCallCategory <- sapply(strsplit(rownames(calls), " "), "[[", 1)

df <- calls
df <- df %>% group_by(FinalCallCategory)
df <- df %>% summarize(count = n())
fig <- df %>% plot_ly(labels = ~FinalCallCategory, values = ~count)
fig <- fig %>% add_pie(hole = 0.6)
fig <- fig %>% layout(title = "Donut charts using Plotly",  showlegend = F,
                      xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
                      yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))


#Simple Shiny dashboard with first box as mtcars data table, second box as the donut plot ('fig')
body <- dashboardBody(
  
  fluidRow(
    
    box(
      title = "Title 1", width = 5, solidHeader = TRUE, status = "primary",
      DTOutput('table')
    ),
    box(
      title = "Title 2", width = 5, solidHeader = TRUE, status = "warning", 
      fig
    )
  )
  
  
)

# We'll save it in a variable `ui` so that we can preview it in the console
ui <- dashboardPage(
  dashboardHeader(title = "Row layout"),
  dashboardSidebar(disable=TRUE),
  body
)

# Preview the UI in the console
shinyApp(ui = ui, server = function(input, output) {
  output$table <- renderDT(calls,
                           filter = "top",
                           options = list(
                             pageLength = 5
                           )
  )
})